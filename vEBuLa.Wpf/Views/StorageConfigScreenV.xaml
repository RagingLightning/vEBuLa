<UserControl x:Class="vEBuLa.Views.StorageConfigScreenV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:vEBuLa.Views"
             xmlns:vm="clr-namespace:vEBuLa.ViewModels"
             xmlns:conv="clr-namespace:vEBuLa.XamlConverter"
             mc:Ignorable="d" 
             x:Name="StorageConfigScreen"
             Height="600" Width="800" Background="#222" d:DataContext="{d:DesignInstance vm:StorageConfigScreenVM}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolVis"/>
        <conv:BoolHideConverter x:Key="BoolHide"/>
        <conv:NullHideConverter x:Key="NullHide"/>
        <conv:BoolNumConverter x:Key="BoolNum"/>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="TextAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#333"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#555"/>
            <Setter Property="BorderBrush" Value="#777"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="BorderBrush" Value="#555"/>
                    <Setter Property="Foreground" Value="#999" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#333"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ListView">
            <Setter Property="Background" Value="#333"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>
        <DataTemplate x:Key="RouteTemplate">
            <DataTemplate.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="17"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="TextAlignment" Value="Center" />
                </Style>
            </DataTemplate.Resources>
            <StackPanel Width="{TemplateBinding ActualWidth}">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Right" Text="{Binding Duration}" d:Text="00:32:30"/>
                    <Rectangle DockPanel.Dock="Right" Width="2" Fill="#666" Margin="5,0"/>
                    <TextBlock DockPanel.Dock="Right" Text="{Binding StationCount}" d:Text="13"/>
                    <Rectangle DockPanel.Dock="Right" Width="2" Fill="#666" Margin="5,0"/>
                    <TextBlock DockPanel.Dock="Right" Text="{Binding Name}" d:Text="Hbf-Melsungen S-Bahn" ToolTip="{Binding Description}"/>
                </DockPanel>
                <Rectangle Height="2" Fill="#666"/>
                <TextBlock Text="{Binding RouteOverview}" d:Text="Hbf S - Achim - Donau - Melsungen"/>
                <Rectangle Height="5" Fill="#666"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="OverviewTemplate">
            <DataTemplate.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="17"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="TextAlignment" Value="Center" />
                </Style>
            </DataTemplate.Resources>
            <Grid Width="{TemplateBinding ActualWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" d:Text="München Hbf S"/>
                <TextBlock Grid.Column="1" Text="{Binding DepartureText}" d:Text="00:00:00"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CustomRouteTemplate">
            <DataTemplate.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="17"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="TextAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="#777"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="Padding" Value="0,-2"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#555"/>
                    <Setter Property="BorderBrush" Value="#777"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="BorderBrush" Value="#555"/>
                            <Setter Property="Foreground" Value="#999" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#333"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataTemplate.Resources>
            <Grid Width="{TemplateBinding ActualWidth}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ComboBox ItemsSource="{Binding Origins}" SelectedItem="{Binding SelectedOrigin}" Visibility="{Binding Origins, Converter={StaticResource NullHide}}" Grid.ColumnSpan="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolNum}, ConverterParameter=1|4}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Text="{Binding OriginText}" d:Text="München Hbf S" FontSize="12" Visibility="{Binding Origin, Converter={StaticResource NullHide}}" Grid.ColumnSpan="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolNum}, ConverterParameter=1|4}"/>
                <Button Grid.Column="1" Content="+" Command="{Binding DataContext.AddOriginCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <Button Grid.Column="2" Content="E" Command="{Binding DataContext.EditOriginCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <Button Grid.Column="3" Content="-" Command="{Binding DataContext.RemoveOriginCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <TextBlock Grid.Column="4" Text="{Binding DepartureText}" d:Text="00:00:00"/>
                <ComboBox Grid.Column="5" ItemsSource="{Binding Segments}" SelectedItem="{Binding SelectedSegment}" Visibility="{Binding Segments, Converter={StaticResource NullHide}}"  Grid.ColumnSpan="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolNum}, ConverterParameter=1|4}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button Grid.Column="6" Content="+" Command="{Binding DataContext.AddSegmentCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <Button Grid.Column="7" Content="E" Command="{Binding DataContext.EditSegmentCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <Button Grid.Column="8" Content="-" Command="{Binding DataContext.RemoveSegmentCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <ComboBox Grid.Column="9" ItemsSource="{Binding Destinations}" SelectedItem="{Binding SelectedDestination}" Visibility="{Binding Destinations, Converter={StaticResource NullHide}}" Grid.ColumnSpan="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolNum}, ConverterParameter=1|4}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Label Content="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Grid.Column="9" Text="{Binding DestinationText}" d:Text="München Pasing" FontSize="12" Visibility="{Binding Destination, Converter={StaticResource NullHide}}" Grid.ColumnSpan="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolNum}, ConverterParameter=1|4}"/>
                <Button Grid.Column="10" Content="+" Command="{Binding DataContext.AddDestinationCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <Button Grid.Column="11" Content="E" Command="{Binding DataContext.EditDestinationCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
                <Button Grid.Column="12" Content="-" Command="{Binding DataContext.RemoveDestinationCommand, ElementName=StorageConfigScreen}" CommandParameter="{Binding .}" Visibility="{Binding DataContext.EditMode, ElementName=StorageConfigScreen, Converter={StaticResource BoolHide}}"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Button DockPanel.Dock="Left" Content="Load" Command="{Binding LoadConfigCommand}"/>
            <Button DockPanel.Dock="Left" Content="Save" Command="{Binding SaveConfigCommand}"/>
            <Button DockPanel.Dock="Right" Content="New" Command="{Binding LoadConfigCommand}" CommandParameter="new"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="ROUTES" IsEnabled="{Binding UsingCustom}" Command="{Binding ToggleRouteModeCommand}"/>
                <Button Grid.Column="1" Content="CUSTOM" IsEnabled="{Binding UsingRoutes}" Command="{Binding ToggleRouteModeCommand}"/>
                <TextBlock Grid.Column="2" Text="{Binding ConfigName}" d:Text="Hauptstrecke München Augsburg" TextAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
        </DockPanel>

        <DockPanel Grid.Row="1" Grid.Column="0" Visibility="{Binding UsingRoutes, Converter={StaticResource BoolHide}}" d:Visibility="Visible">
            <TextBlock DockPanel.Dock="Top" Text="Available Routes"/>
            <ListView ItemsSource="{Binding Routes}" SelectedItem="{Binding SelectedRoute}" d:ItemsSource="{d:SampleData}" ItemTemplate="{StaticResource RouteTemplate}"/>
        </DockPanel>

        <DockPanel Grid.Row="1" Grid.Column="1" Visibility="{Binding UsingRoutes, Converter={StaticResource BoolHide}}" d:Visibility="Visible">
            <TextBlock DockPanel.Dock="Top" Text="Selected Route"/>
            <ListView ItemsSource="{Binding RouteOverview}" d:ItemsSource="{d:SampleData}" ItemTemplate="{StaticResource OverviewTemplate}"/>
        </DockPanel>

        <DockPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding UsingCustom, Converter={StaticResource BoolHide}}" d:Visibility="Hidden">
            <TextBlock DockPanel.Dock="Top" Text="Setup Custom Route"/>
            <Grid DockPanel.Dock="Top" Background="#333">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Origin" Grid.ColumnSpan="2"/>
                <TextBlock Text="Departure" Grid.Column="2"/>
                <TextBlock Text="Segment" Grid.Column="3" Grid.ColumnSpan="2"/>
                <TextBlock Text="Destination" Grid.Column="5" Grid.ColumnSpan="2"/>
            </Grid>
            <ListView ItemsSource="{Binding CustomRoute}" d:ItemsSource="{d:SampleData}" ItemTemplate="{StaticResource CustomRouteTemplate}"/>
        </DockPanel>

        <DockPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
            <Button DockPanel.Dock="Right" Content="Start" Command="{Binding StartEbulaCommand}"/>
            <Button DockPanel.Dock="Right" Content="Save as route" Command="{Binding SaveRouteCommand}" Visibility="{Binding ShowSave, Converter={StaticResource BoolVis}}"/>
            <TextBox DockPanel.Dock="Right" Text="{Binding DepartureText, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" d:Text="00:00:00" Width="100"/>
            <TextBlock DockPanel.Dock="Right" Text="Departure Time: " VerticalAlignment="Center"/>
            <TextBlock Text="{Binding AdditionalInfo}" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding Status}" VerticalAlignment="Center"/>
        </DockPanel>
    </Grid>
</UserControl>
